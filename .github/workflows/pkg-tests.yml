name: "Run a package test suite"

on:
  workflow_call:
    inputs:
      container:
        required: true
        type: string

jobs:
  extract:
    name: "Get package names"
    runs-on: ubuntu-latest
    container: ghcr.io/gap-system/gap-docker-${{ inputs.container }}:master
    outputs:
      matrix: ${{ steps.get-names.outputs.matrix }}
      container: ${{ inputs.container }}
    steps:
      # FIXME: Awful! This should be completely redone to use the package distro
      - name: "Get the list of package names"
        id: get-names
        run: |
          cd ${GAP_HOME}/pkg
          MATRIX='{"package":['
          for PKG in `ls */PackageInfo.g | cut -d'/' -f1 | cut -d'-' -f1 | tr '[:upper:]' '[:lower:]' | sort`; do
            echo "${PKG}"
            MATRIX="${MATRIX}\"${PKG}\","
          done
          MATRIX="${MATRIX}]}"
          MATRIX='{"package":["4ti2interface","ace","aclib","agt"]}'
          echo "::set-output name=matrix::$MATRIX"

  individual-package:
    name: "${{ matrix.package }}"
    needs: extract
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.extract.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2

      - name: "Get the Docker container URL"
        id: container
        run: echo "::set-output name=url::ghcr.io/gap-system/gap-docker-${{ needs.extract.outputs.container }}:master"

      - run: docker pull ${{ steps.container.outputs.url }}

      - name: "Run ${{ matrix.package }}'s tests in the container with GAP ${{ needs.extract.outputs.container }}"
        timeout-minutes: 20
        run: >
          docker run
          -v $PWD:/home/workspace
          ${{ steps.container.outputs.url }}
          /bin/sh -c "PKG_NAME=${{ matrix.package }} /home/workspace/pkg-tests.sh"

      - name: "Get job status"
        id: job-status
        if: always()
        run: |
          PKG="${{ matrix.package }}"
          STATUS="${{ job.status }}"
          echo ${STATUS} > "${PKG}.txt"

      - name: "Upload job status"
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ matrix.package }}
          path: "${{ matrix.package }}.txt"

  report:
    name: "Report"
    needs: individual-package
    if: always()
    runs-on: ubuntu-18.04
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
    steps:
      - uses: actions/checkout@v2

      - name: "Create gh-pages worktree"
        run: |
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
          git fetch
          git branch --track gh-pages origin/gh-pages
          git worktree add gh-pages origin/gh-pages

      - name: "Download every job status"
        uses: actions/download-artifact@v2
        with:
          path: reports

      - name: "Set up Python 3.7"
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: "Generate report"
        id: report
        run: python pkg-report.py

      - name: "Push report to gh-pages"
        id: push-report
        run: |
          git config --global user.name ${{github.actor}}
          git config --global user.email ${{github.actor}}@users.noreply.github.com
          cd gh-pages
          git add _data/*
          git commit -m "Automated report version 2"
          git push origin HEAD:gh-pages

      - name: "Upload report"
        uses: actions/upload-artifact@v2
        with:
          name: "report"
          path: "_data/*"
